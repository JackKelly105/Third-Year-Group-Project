<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>